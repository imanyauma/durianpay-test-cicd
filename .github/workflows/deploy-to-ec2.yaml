name: AWS-EC2 Instance CD

on:
  workflow_run:
    workflows: ["Build and Push Docker Image to Registry"]
    types: [completed]

jobs:
  on-success:

    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your region

      - name: Pull Docker Image Information
        run: |
          echo "Using image: imanyauma/durianpay-test:latest"
          echo "export IMAGE=imanyauma/durianpay-test:latest" >> $GITHUB_ENV

      - name: Update EC2 Instances in Auto Scaling Group
        run: |
          ASG_NAME="your-auto-scaling-group-name"
          INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
            --auto-scaling-group-names $ASG_NAME \
            --query "AutoScalingGroups[].Instances[].InstanceId" \
            --output text)

          for INSTANCE_ID in $INSTANCE_IDS; do
            PUBLIC_DNS=$(aws ec2 describe-instances \
              --instance-ids $INSTANCE_ID \
              --query "Reservations[].Instances[].PublicDnsName" \
              --output text)
          
            echo "Deploying to instance: $INSTANCE_ID ($PUBLIC_DNS)"
          
            ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_KEY_PAIR }} ec2-user@$PUBLIC_DNS << EOF
              docker pull $IMAGE
              docker stop my-app || true
              docker rm my-app || true
              docker run -d --name my-app -p 80:80 $IMAGE
            EOF
          done